dumping graph to: lancet.graalgen.Impl$$anon$3
ass:int
2
ass:int
3
readSym(2):int
3
failing symbol: Sym(0)
lhs: 8|Phi(2)
rhs: 10|Phi(4)
readSym(1):int
2
readSym(2):int
3
readSym(1):int
2
GraalOptions.Dump         = LMS
GraalOptions.MethodFilter = Impl$$anon$3$$anonfun$1.apply$mcII$sp
===== HIGH_LEVEL
0|StartNode(3)
1|Local(0)()
2|Local(1)()
3|FrameState@0(1,2)
4|Const(0)()
5|EndNode()
6|LoopBegin(11,5)
9|Phi(4 31)(6,4,31)
10|Phi(4 32)(6,4,32)
11|FrameState@0(1,2,9,10)
12|<(2,10)
18|Const(1)()
27|Begin()
29|Begin()
30|If(12)
31|+(9,10)
32|+(10,18)
33|LoopEnd(6)
34|Return(9)
36|LogicConstant()
37|LogicConstant()
----- HIGH_LEVEL method calls 
===== MID_LEVEL
0|StartNode(3)
1|Local(0)()
2|Local(1)()
3|FrameState@0(1,2)
4|Const(0)()
5|EndNode()
6|LoopBegin(11,5)
11|FrameState@0(1,2,49,50)
12|<(2,50)
18|Const(1)()
27|Begin()
29|Begin()
30|If(12)
31|+(49,50)
32|+(50,18)
33|LoopEnd(6)
34|Return(49)
40|<(2,4)
41|Begin()
42|Begin()
43|If(40)
47|Return(4)
49|Phi(4 31)(6,4,31)
50|Phi(18 32)(6,18,32)
52|LogicConstant()
53|LogicConstant()
----- MID_LEVEL method calls 
To debug use:
Scope LMS
Method HotSpotMethod<Impl$$anon$3$$anonfun$1.apply$mcII$sp>
===== DONE
